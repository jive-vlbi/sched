#! /bin/csh

#  Allow Verify to ignore different $SCHEDs in the examples
#  and the Stdout versions.

/bin/rm Stdout/SetSchedStd
cat <<EOF > Stdout/SetSchedStd
#! /bin/csh
  setenv SCHED_STD $SCHED
EOF

#  Copy current files to Stdout to make new standard files.

/bin/cp *.key      Stdout
/bin/cp *.com      Stdout
/bin/cp *.sum      Stdout
/bin/cp *.tv2d     Stdout
/bin/cp *crd.hn    Stdout
/bin/cp *sch.hn    Stdout
/bin/cp *.flag     Stdout
/bin/cp *crd.gb    Stdout
/bin/cp *.vex      Stdout
/bin/cp *.oms      Stdout
/bin/cp *.runlog   Stdout
/bin/cp eg5cmsch.y    Stdout
/bin/cp eo*sch.ef     Stdout
/bin/cp mk5vxgsch.ef  Stdout
/bin/cp eg3mm*crd.pt  Stdout
/bin/cp eg3mm*sch.pt  Stdout
/bin/cp newsyncrd.la  Stdout
/bin/cp newsynsch.la  Stdout
/bin/cp n02l1sch.ef   Stdout
/bin/cp egsatcrd.pt   Stdout
/bin/cp egsatsch.pt   Stdout
/bin/cp testruns.out  Stdout
/bin/cp eg1024sch.mc  Stdout
/bin/cp lba*sch.at    Stdout
/bin/cp n2227crd.pt   Stdout
/bin/cp n2227sch.pt   Stdout

#/bin/cp *obs.gb    Stdout  Don't have in examples any more.

# Now fix things like converting  -0.0 to 0.0 so that Verify
# doesn't find differences due to minor formatting differences.
# This runs the same sed scripts on the standard files that will
# get run by Check_results on the new files.

cd Stdout
set schfiles = `ls *sch.*`
echo 'Adjusting items like -0.0 in sch files.'
echo $schfiles
foreach file  ($schfiles)
   sed -i -f ../Check_sed $file
end

set sumfiles = `ls *.sum`
echo 'Adjusting items like -0.0 in sum files.'
echo $sumfiles
foreach file  ($sumfiles)
   sed -i -f ../Check_sed $file
end
cd ..
