#!/bin/csh -f

#  Compare results of a run of sched with "standard" results somewhere.
#  Inputs  $1 is the expcode of the new results.
#          $2 is the station to compare.
#          $3 is the directory for the "standard" results.
#          $4 is the name of the .key file.
#          sed used to remove directory name differences.
#           Warning - Check_sed must not have blanks at end of lines.

#   The -f on the first line tries to prevent $SCHED from being reset.

#  Compare the .key files.

if( $SCHED !~ */ ) then
  setenv SCHED_SUB $SCHED_STD
else
  setenv SCHED_SUB "$SCHED_STD"/
endif

echo ' '
echo '-------  diffs - local file vs file in ' $3 '-----------'
echo '----------------------' $4 '-------------------------'
sed -e s:"$SCHED":"$SCHED_SUB":g $4 | \
  sed -f Check_sed | diff - $3/$4

#  Check the .runlog file. 

echo '----------------------' $1.runlog '-------------------------'
sed -e s:"$SCHED":"$SCHED_SUB":g $1.runlog | \
  sed -f Check_sed | diff - $3/$1.runlog

#   Check the summary file.

if( -e $1.sum ) then
  echo '----------------------' $1.sum '-------------------------'
  sed -e s:"$SCHED":"$SCHED_SUB":g $1.sum | \
     sed -f Check_sed | diff - $3/$1.sum
else if( -e $1.$2.sum ) then
  echo '----------------------' $1.$2.sum '-------------------------'
  sed -e s:"$SCHED":"$SCHED_SUB":g $1.$2.sum | \
     sed -f Check_sed | diff - $3/$1.$2.sum
else
  echo '*************  SCHED did not run. ***************'
  echo 'Or at least neither '$1'.sum nor '$1'.'$2'.sum was not found'
  echo 'This might be ok if the example tried to use an unsupported'
  echo 'feature for this installation, like satellite tracking.'
endif

#   Check the tv2d file.

echo '----------------------' $1.tv2d '-------------------------'
if( -e $1.tv2d ) then
  sed -e s:"$SCHED":"$SCHED_SUB":g $1.tv2d | \
     sed -f Check_sed | diff - $3/$1.tv2d
endif

#   Check crd file of the requested station, if present.

if( -e $1crd.$2 ) then
  echo '----------------------' $1crd.$2 '-----------------------'
  sed -f Check_sed $1crd.$2 | diff - $3/$1crd.$2
endif

#   Check sch file of the requested station, if present.

if( -e $1sch.$2 ) then
echo '----------------------' $1sch.$2 '-----------------------'
  sed -e s:"$SCHED":"$SCHED_SUB":g $1sch.$2 | \
    sed -f Check_sed | diff - $3/$1sch.$2
endif

#  Check the flag file, if present.

if( -e $1.flag ) then
echo '----------------------' $1.flag '-----------------------'
   diff $1.flag $3/$1.flag
endif

#  Check any Green Bank files that might be present.
#  Removed checking of obs.gb files as they are no longer used.

if( -e $1obs.gb ) then
  echo '----------------------' $1crd.gb ' -----------------------'
  sed -f Check_sed $1crd.gb | diff - $3/$1crd.gb
endif

#  Removed check of any Snap files that might be present (from the 
#  mark2 file).  There are none in the Verify suite.

#  Check a VEX file if one is present.

if( -e $1.vex ) then
  echo '----------------------' $1.vex ' ------------------------'
  sed -f Check_sed $1.vex | diff - $3/$1.vex
else if( -e $1.$2.sum ) then
  echo '----------------------' $1.$2.vex ' ---------------------'
  sed -e s:"$SCHED":"$SCHED_SUB":g $1.$2.vex | \
     sed -f Check_sed | diff - $3/$1.$2.vex
else
  echo '*************  VEX file not found. ***************'
  echo 'Or at least neither '$1'.vex nor '$1'.'$2'.vex was found.'
  echo 'This might be ok if the example tried to use an unsupported'
  echo 'feature for this installation, like satellite tracking.'
endif

echo '----------------------------------------------------------'
echo ' '

#  Check an OMS file if one is present.

if( -e $1.oms ) then
  echo '----------------------' $1.oms ' ------------------------'
  sed -f Check_sed $1.oms | diff - $3/$1.oms
endif

echo '----------------------------------------------------------'
echo ' '

