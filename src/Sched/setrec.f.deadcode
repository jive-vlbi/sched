
      SUBROUTINE SETREC
C
C     Routine for SCHED that sets some of the recorder parameters.
C     Called by SETDEFS.
C
C     The hardest part is setting the format.  See SETFORM for
C     details.
C
      INCLUDE   'sched.inc'
      INCLUDE   'schset.inc'
C
C     MPTRK is the maximum number of possible nominal (power of 2)
C     number of track options (eg 4, 8, 16, 32, 64)
C
      INTEGER           MPTRK
      PARAMETER         (MPTRK=7)
C
      INTEGER           I, ISTA, KS, LEN1, NSTREAMS, KBPS
      INTEGER           ISETF, ISCN, NPASS, TRKUSED, MTRK
      INTEGER           MSTREAMS(MAXSET), NEEDDR
      LOGICAL           NEEDFMT(MSET), NEEDFAN(MAXSET), NEEDANY
      LOGICAL           VLBAMKIV(MSET), GOTANY, USE(MAXSET)
      REAL              MINTBPS, MAXTBPS, SPEDUP, RFAN
      REAL              RSAMP(MAXSET), MINFAN(MAXSET), MAXFAN(MAXSET)
      REAL              TBPS(MAXSTA,MAXSET)
      INTEGER           WSET(MAXSTA)
      DOUBLE PRECISION  SETTIME(MAXSET), TOTIME
      DOUBLE PRECISION  TAPEUSE(MPTRK), CORRTIME(MPTRK)
      DOUBLE PRECISION  STUSE, SP2, ASP2
      INTEGER           NPTRK(MPTRK), NTRK
      LOGICAL           OKTRK(MPTRK)
C
C     Allowed numbers of tracks.
C
      DATA  NPTRK  /  1, 2, 4, 8, 16, 32, 64 /
C --------------------------------------------------------------------














C
C     Set the maximum track bit rate globally for the experiment.
C     This will be 8 Mbps except in pure Mark IV observations where
C     it is 16.
C
C     Some correlators can play different stations at different
C     fanout and track rates. 
C  **     Because playback happens at only one bit rate, recording at
C     different bit rates at different stations is not supported.
C     That would require different speedup factors on different
C     antennas which would not be possible.
C
      MAXTBPS = 16.0
      MINTBPS = 2.0
      DO KS = 1, NSET
         IF( FORMAT(KS)(1:4) .NE. 'MKIV' ) MAXTBPS = 8.0
      END DO
C
C     Check if two heads (tapes on the VLBA) are needed.
C     Set the maximum number of tracks.
C     Check that the bit rate is not too large for TWOHEAD mode.

C **   Use twoheads rather than 16 Mbps.
C
      TWOHEAD = .FALSE.
      MTRK = 32
      DO KS = 1, NSET
         IF( VLBAMKIV(KS) ) THEN
            KBPS = NINT( SAMPRATE(KS) * NCHAN(KS) * BITS(1,KS) )
            IF( KBPS  .GT. MAXTBPS * MTRK ) THEN
               TWOHEAD = .TRUE.
               MTRK = 2 * MTRK
            END IF
            IF( KBPS .GT. MAXTBPS * MTRK ) THEN
               CALL WLOG( 1, 'SETREC: Bit rate too high.' )
               CALL SETERR( KS )
            END IF
         END IF
      END DO
C
C     Let the user know that 2 head mode is being used.
C     Warn the user if any stations can't do it.  Those sations will
C     only record half the data.
C
      IF( TWOHEAD ) THEN
         CALL WLOG( 0, 'SETREC:  Using 2 head (MkIV) or 2 ' //
     1       'tape (VLBA) wide band mode.' )
         DO ISTA = 1, NSTA
            IF( NHEADS(STANUM(ISTA)) .LE. 1 .AND. 
     1          STNDRIV(STANUM(ISTA)) .LE. 1 ) THEN
               CALL WLOG( 0, 'SETREC:  ** ' // STANAME(ISTA) // 
     1             ' cannot do 2 head mode.' )
               CALL WLOG( 0, '            It will record half the '//
     3             'bandwidth used at stations that can.' )
            END IF
         END DO
      END IF
C
C     Set the head mode (HEADMODE) to use for each station.  This 
C     determines the pattern of head positions both in terms of 
C     sequence and actual offsets.  All VLBA observations, and all 
C     MarkIV single head observations use the same mode.  MarkIV 
C     two head modes use a different mode, for which the number of 
C     head positions is different from the single pass case.  
C
C     For the Mark IV 2 head mode, set the number of passes per
C     head position to an appropriately low value, overriding
C     the default which is normally 14.  The tape initialization
C     parameters were rearranged to have a set for every station
C     in order to make this possible without messing up other 
C     stations.
C
      DO ISTA = 1, NSTA
         IF( HEADMODE(ISTA) .EQ. ' ' ) THEN
            IF( TWOHEAD .AND. NHEADS(STANUM(ISTA)) .GT. 1 .AND.
     1          ( RECORDER(STANUM(ISTA)) .EQ. 'MKIV' .OR. 
     2            RECORDER(STANUM(ISTA)) .EQ. 'VLBA4' ) ) THEN
               HEADMODE(ISTA) = 'MKIV2H'
            ELSE
               HEADMODE(ISTA) = 'VLBA14'
            END IF
         END IF
      END DO
      DO ISTA = 1, NSTA
         IF( HEADMODE(ISTA) .EQ. 'MKIV2H' ) THEN
            NHDPOS(ISTA) = 6
         END IF
      END DO
C
C     If TAPEMODE was set, the FORMAT can be specified right away.
C     Only deal with VLBA and MKIV formats.
C
      DO KS = 1, NSET
         IF( NEEDFMT(KS) .AND. TAPEMODE(KS) .NE. 0 ) THEN
C
C           Prevent user requested multiple pass/head position 
C           in TWOHEAD mode.
C
            IF( TWOHEAD .AND. TAPEMODE(KS) .NE. 1 ) THEN
               CALL WLOG( 1, 'SETREC: Do not use multple pass per '//
     1              'head position (tpmode>1) with 2 head (tape) mode' )
               CALL SETERR( KS )
            END IF
C
C           Get the format.
C
            TRKUSED = MTRK / TAPEMODE(KS)
            NSTREAMS = NCHAN(KS) * BITS(1,KS)
            CALL SETFMT( KS, NSTREAMS, TRKUSED )
C
            NEEDFMT(KS) = .FALSE.
C
         END IF
      END DO
C
C     See if any more formats are needed.
C
      NEEDANY = .FALSE.
      DO KS = 1, NSET
         NEEDANY = NEEDANY .OR. NEEDFMT(KS) 
      END DO
C
      IF( NEEDANY ) THEN
C
C        For each setup file (not group) that makes a wideband 
C        recording, determine samplerate, number of data streams
C        and minimum fan out.
C        Rely on later checks to catch variable sample rates - 
C        just take the last here.
C        Note that the "NEEDANY" IF above assures that we will get past
C        the "VLBAMKIV" IF below at least once.
C        Beware the possibility of mixing in some MKIII setups!
C
         DO ISETF = 1, NSETF
            USE(ISETF) = .FALSE.
            RSAMP(ISETF) = 0.0
            MINFAN(ISETF) = 0.0
            MAXFAN(ISETF) = 4.0
            NEEDFAN(ISETF) = .TRUE.
            MSTREAMS(ISETF) = 0
         END DO
C
         DO KS = 1, NSET
            IF( VLBAMKIV(KS) .OR. FORMAT(KS) .EQ. 'MARKIII' ) THEN
               ISETF = ISETNUM(KS)
               RSAMP(ISETF) = SAMPRATE(KS)
               MSTREAMS(ISETF) = MAX( MSTREAMS(ISETF), 
     1                    NCHAN(KS) * BITS(1,KS) )
               USE(ISETF) = .TRUE.
C
               IF( NEEDFMT(KS) ) THEN
C
C                 Format is not yet completely determined.
C                 Get the limits on the fan outs.  Do this even
C                 if some other group has forced the fanout
C                 in case there is some incompatibility.
C
                  RFAN = MAX( 1.0, SAMPRATE(KS) / MAXTBPS )
                  MINFAN(ISETF) = MAX( MINFAN(ISETF), RFAN )
                  RFAN = MIN( 4.0, SAMPRATE(KS) / MINTBPS )
                  MAXFAN(ISETF) = MIN( MAXFAN(ISETF), RFAN )
                  RFAN = MTRK / ( NCHAN(KS) * BITS(1,KS) )
                  MAXFAN(ISETF) = MIN( MAXFAN(ISETF), RFAN )
               ELSE
C
C                 The format is known, so the fan out is too.
C                 Set MINFAN and MAXFAN as below to trap cases
C                 where this group is not compatible with others
C                 from the same setup file.
C
                  CALL SETFAN( FORMAT(KS), RFAN )
                  MINFAN(ISETF) = MAX( MINFAN(ISETF), RFAN )
                  MAXFAN(ISETF) = MIN( MAXFAN(ISETF), RFAN )
                  NEEDFAN(ISETF) = .FALSE.
               END IF
            END IF
         END DO
C
C        Check for impossible cases.  
C
         DO ISETF = 1, NSETF
            IF( MINFAN(ISETF) .GT. MAXFAN(ISETF) ) THEN
               CALL WLOG( 1, 'SETREC: There is no acceptable fan '//
     1              'out for setup file: ' )
               CALL WLOG( 1, SETFILE(ISETF) )
               CALL ERRLOG( '      Check NCHAN, SAMPRATE, BITS etc.' )
            END IF
         END DO
C
C        Get the amount of time spent with each setup file.  Don't 
C        be concerned about what stations are involved.  Note that
C        this determination is before any optimization so it could
C        come up with a bit odd results in optimized cases.  However,
C        most such cases don't vary the recording formats and we
C        are using this information only to help pick a format.
C        Don't include scans for which there is no recording.
C        I am being a bit casual about times - the adjustments
C        based on PRESCAN are not included.
C
         DO ISETF = 1, NSETF
            SETTIME(ISETF) = 0.D0
         END DO
         TOTIME  = 0.0D0
         DO ISCN = 1, NSCANS
            IF( .NOT. NOREC(ISCN) ) THEN
               ISETF = SETNUM(ISCN)
               SETTIME(ISETF) = SETTIME(ISETF) + DUR(ISCN)
               TOTIME = TOTIME + DUR(ISCN)
            END IF
         END DO
C
C        For each possible number of tracks in NPTRK, test if that is
C        a valid number to use.  Then get the tape usage and 
C        correlator time for each and pick the best.
C
C        Flag impossible cases.  Also initialize accumulators.
C
         DO I = 1, MPTRK
            TAPEUSE(I) = 0.0
            CORRTIME(I) = 0.0
            OKTRK(I) = .TRUE.
            DO ISETF = 1, NSETF
               IF( USE(ISETF) ) THEN
                  IF( NPTRK(I) .LT. 
     1                NINT( MSTREAMS(ISETF) * MINFAN(ISETF) )
     2                .OR. NPTRK(I) .GT. MTRK ) OKTRK(I) = .FALSE.
                  IF( TWOHEAD .AND. NPTRK(I) .NE. MTRK ) 
     1                OKTRK(I) = .FALSE.
               END IF
            END DO
         END DO
C
C        For the possible ones, get the tape consumption and correlator
C        time.
C
         GOTANY = .FALSE.
         DO I = 1, MPTRK
            IF( OKTRK(I) ) THEN
               DO ISETF = 1, NSETF
                  IF( USE(ISETF) ) THEN
C
C                    Get the fan out to use for this setup for this 
C                    number of tracks. Note MINFAN = MAXFAN if format 
C                    already set.
C
                     IF( NEEDFAN(ISETF) ) THEN
                        RFAN = FLOAT( NPTRK(I) / MSTREAMS(ISETF) ) 
                        RFAN = MIN( MAXFAN(ISETF), RFAN )
                        RFAN = MAX( MINFAN(ISETF), RFAN )
                     ELSE
                        RFAN = MINFAN(ISETF)
                     END IF
C
C                    Get the tape and correlator times.
C
                     SPEDUP = MAXTBPS / ( RSAMP(ISETF) / RFAN )
                     NPASS = MAX( 1, MTRK / NPTRK(I) )
                     TAPEUSE(I) = TAPEUSE(I) + SETTIME(ISETF) / 
     1                      ( NPASS * SPEDUP )
                     CORRTIME(I) = CORRTIME(I) + 
     1                      SETTIME(ISETF) / SPEDUP 
                     GOTANY = .TRUE.
                  END IF
               END DO
            END IF
         END DO
C
C        Abort if there was a problem.
C
         IF( .NOT. GOTANY ) THEN
            CALL WLOG( 1, 'SETREC: Problem setting default formats.' )
            CALL WLOG( 1, '        There does not appear to be a ' //
     1            'viable number of tracks to use.' )
            CALL ERRLOG(  '        Check setups and possible ' //
     1            'programming problem. ' )
         END IF
C
C        Now decide which number of tracks is best.
C        First pick options that use the least tape.
C        This loop sets OKTRK to false for non-optimal arrangements
C        which will influence the choice in the next loop.
C
         STUSE = 1.D10
         DO I = 1, MPTRK
            IF( OKTRK(I) .AND. TAPEUSE(I) .LE. STUSE * 1.01  ) THEN
               STUSE = TAPEUSE(I)
            ELSE
               OKTRK(I) = .FALSE. 
            ENDIF
         END DO
C
C        Of what is left, try for CORTIME = TOTIME / 2.
C
         SP2 = 1.0D10
         DO I = 1, MPTRK
            ASP2 = ABS( CORRTIME(I) - ( TOTIME / 2.D0 ) )
            IF( OKTRK(I) .AND. ASP2 .LT. SP2 ) THEN
               SP2 = ASP2
               NTRK = NPTRK(I)
            ELSE
               OKTRK(I) = .FALSE. 
            ENDIF
         END DO
C
C
C        Should now have an optimum NTRK for this experiment.
C
         IF( NTRK .EQ. 0 ) THEN
            CALL ERRLOG( 'SETREC: Could not get number of tracks for '
     1             // 'format defaulting.' )
         ELSE
            WRITE( MSGTXT, '( A, I4, A )' )
     1            'SETREC:  Setting defaulted formats to use ', NTRK, 
     2            ' tracks. '
            CALL WLOG( 0, MSGTXT )
         END IF
C
C        Loop over the setup groups setting the format etc.
C
         DO KS = 1, NSET
C
C           Get the fully specified format based on the number of
C           data streams and the number of tracks used.  This
C           is done in such a way to try to use NTRK tracks, but to
C           assure the same fan out for all groups in a file and
C           to allow fewer tracks if the group won't fill all at the
C           requested fan out.
C
            IF( NEEDFMT(KS) ) THEN
               ISETF = ISETNUM(KS)
               NSTREAMS = NCHAN(KS) * BITS(1,KS)
               IF( NEEDFAN(ISETF) ) THEN
                  RFAN = FLOAT( NTRK / MSTREAMS(ISETF) ) 
                  RFAN = MIN( MAXFAN(ISETF), RFAN )
                  RFAN = MAX( MINFAN(ISETF), RFAN )
               ELSE
                  RFAN = MINFAN(ISETF)
               END IF
               TRKUSED = NCHAN(KS) * BITS(1,KS) * RFAN
               CALL SETFMT( KS, NSTREAMS, TRKUSED )
            END IF
         END DO
C
      END IF
