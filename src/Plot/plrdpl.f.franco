      SUBROUTINE PLRDPL( SCREEN, COLOR, RXMIN, RXMAX, RYMIN, RYMAX )
C
C     Routine for SCHED that plots source positions in RA - Dec.
C
      INCLUDE 'sched.inc'
      INCLUDE 'plot.inc'
C
      INTEGER           IER, ITICKS, ISRC, SL, LEN1
      INTEGER           LABSIZ, LINSIZ, CIND
      LOGICAL           SCREEN, COLOR
      REAL              XPT, YPT, XSHADE(4), YSHADE(4)
      REAL              XMIN, XMAX, YMIN, YMAX
      REAL              XB(4), YB(4)
      REAL              X1, X2, Y1, Y2
      CHARACTER         TITLE*80, LABELX*60, LABELY*60, TYPE*8
      DOUBLE PRECISION  DAY0, RXMIN, RXMAX, RYMIN, RYMAX
      DOUBLE PRECISION  TMID, RAS, DECS
C -------------------------------------------------------------------
C     Set plot scale and axis labels depending on request.  Check the
C     request.
C
      DAY0 = DINT( TFIRST )
      TYPE = 'RA'
      CALL PLOTDEF( IER, 'X', TYPE, RXMIN, RXMAX, DAY0, LABELX, 
     1              XMIN, XMAX )
      IF( IER .NE. 0 ) GO TO 990
      TYPE = 'DEC'
      CALL PLOTDEF( IER, 'Y', TYPE, RYMIN, RYMAX, DAY0, LABELY, 
     1              YMIN, YMAX )
      IF( IER .NE. 0 ) GO TO 990
C
C     Set the Sky Scale.
C
      CALL PLCELS( XMIN, XMAX, YMIN, YMAX, X1, X2, Y1, Y2 )
C
C     Set the world coordinates and plot area.
C
      CALL PGSVP( X1, X2, Y1, Y2 )
      IF( XMIN .EQ. XMAX) XMAX = XMIN + 0.1
      IF( YMIN .EQ. YMAX) YMAX = YMIN + 0.1
      CALL PGSWIN( XMAX, XMIN, YMIN, YMAX )
C
C     Set Zoom window for coordinate conversions
C
      PZMWIN(1) = X1
      PZMWIN(2) = X2
      PZMWIN(3) = Y1
      PZMWIN(4) = Y2
C
C     Color the background.
C
      IF( COLOR ) THEN
         IF( SCREEN ) THEN
            ITICKS = 9
            LINSIZ = PLYLW(1)
            LABSIZ = PLYAW(1)
            CIND    = 16
         ELSE
            ITICKS = 1
            LINSIZ = PLYLW(2)
            LABSIZ = PLYAW(2)
            IF( PFLBCK .LE. 2 ) THEN
               CIND    = 17
            ELSE
               CIND    = 18
            END IF
         END IF
C
         XSHADE(1) = XMIN !  + ( XMAX - XMIN ) * 0.002
         XSHADE(2) = XSHADE(1)
         XSHADE(3) = XMAX ! - ( XMAX - XMIN ) * 0.002
         XSHADE(4) = XSHADE(3)
         YSHADE(1) = YMIN ! + ( YMAX - YMIN ) * 0.004
         YSHADE(2) = YMAX ! - ( YMAX - YMIN ) * 0.004
         YSHADE(3) = YSHADE(2)
         YSHADE(4) = YSHADE(1)
         CALL PGSCI( CIND )
         CALL PGPOLY( 4, XSHADE, YSHADE )
      END IF
C
C     Select normal or time axes.
C
      CALL PGSCH( 0.85 )
      IF( SCREEN ) THEN
         CALL PGSCI( 0 )
      ELSE
         CALL PGSCI( 1 )
      END IF
      CALL PGSLW( 1 )
      CALL PGTBOX( 'GYZXH', 0.0, 0, 'GYZD', 0.0, 0 )
      CALL PGSLW( LABSIZ )
      CALL PGSCI( ITICKS )
      CALL PGTBOX( 'BCNTSYZXH', 0.0, 0, 'BCNTSYZD', 0.0, 0 )
C
C     If the sun is plotted add the start date to the title
C
      TITLE = 'Experiment code: '//EXPCODE
      IF( PXYSUN ) CALL PLTLAB( 'RADEC', DAY0, 0, TITLE )
C
C     Label axes
C
      CALL PGSCI( 2 )
      CALL PGSCH( 1.3 )
      CALL PGLAB( LABELX, LABELY, TITLE )
C
C     First draw all source in the catalog if requested
C
      IF( PRDCAT ) THEN
         CALL PLCATA( SCREEN, COLOR, XMIN, XMAX, YMIN, YMAX, 0 )
      END IF
C
C     Loop over sources.
C
      CALL PGBBUF
      CALL PGSCI( PLYCT(2,1) )
      DO ISRC = 1, NSRC
C
C        Draw data.
C
         XPT = RA2000(SRCATN(ISRC)) * 3600.D0 / RADHR
         YPT = D2000(SRCATN(ISRC)) * 3600.D0 / RADDEG
         IF( XPT .GE. XMIN .AND. XPT .LE. XMAX .AND. 
     1       YPT .GE. YMIN .AND. YPT .LE. YMAX ) THEN
            CALL PGSCH( 1.0 )
            CALL PGSLW( LINSIZ )
            CALL PGPT( 1, XPT, YPT, PLYCT(2,2) )
            CALL PGSCH( 0.6 )
C
C           Check if the bounding box string is less than max
C           X axis. If not plot the source name before the
C           source mark.
C
            CALL PGSLW( LABSIZ )
            SL = LEN1( SRCNAME(ISRC) )
            CALL PGQTXT( XPT, YPT, 0.0, 0.0, 
     1                   'X'//SRCNAME(ISRC)(1:SL), XB, YB )
            IF( XB(4) .LE. XMIN ) THEN
               XPT = XPT - ( XB(4) - XB(1) )
               CALL PGTEXT( XPT, YPT, SRCNAME(ISRC)(1:SL) )
            ELSE
               CALL PGTEXT( XPT, YPT, '  '//SRCNAME(ISRC) )
            END IF
         END IF
C
      END DO
C
      CALL PGEBUF
C
C     Draw Sun
C
      IF( PXYSUN ) THEN
         TMID = TFIRST + ( TEND - TFIRST ) / 2.D0
         CALL SUNPOS( TMID, RAS, DECS )
         IF( RAS .LT. 0.D0 ) RAS = TWOPI + RAS
         XPT = RAS * 3600.D0 / RADHR
         YPT = DECS * 3600.D0 / RADDEG
         IF( XPT .GE. XMIN .AND. XPT .LE. XMAX .AND. 
     1       YPT .GE. YMIN .AND. YPT .LE. YMAX ) THEN
            CALL PGSCI( PLYCT(1,1) )
            CALL PGSCH( 1.0 )
            CALL PGSLW( LINSIZ )
            CALL PGPT( 1, XPT, YPT, PLYCT(1,2) )
            CALL PGSCH( 0.6 )
            CALL PGSLW( LABSIZ )
            CALL PGQTXT( XPT, YPT, 0.0, 0.0,'XSUN', XB, YB )
            IF( XB(4) .LE. XMIN ) THEN
               XPT = XPT - ( XB(4) - XB(1) )
               CALL PGTEXT( XPT, YPT, 'SUN' )
            ELSE
               CALL PGTEXT( XPT, YPT, '  SUN' )
            END IF
         END IF
      END IF
C
C     Plot Symbols Key if Catalog Selected
C
      IF( PRDCAT ) CALL PLCKEY( SCREEN )
C
  990 CONTINUE
      RETURN
      END
