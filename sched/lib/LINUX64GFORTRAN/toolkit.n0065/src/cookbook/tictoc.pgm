C$Procedure      TICTOC ( UTC and ET time conversion. )
C
      PROGRAM    TICTOC
C
C$ Abstract
C
C     This `cookbook' example program demonstrates use of the
C     following two SPICELIB time conversion routines:
C
C                    STR2ET
C                    ET2UTC
C
C$ Disclaimer
C
C     THIS SOFTWARE AND ANY RELATED MATERIALS WERE CREATED BY THE
C     CALIFORNIA INSTITUTE OF TECHNOLOGY (CALTECH) UNDER A U.S.
C     GOVERNMENT CONTRACT WITH THE NATIONAL AERONAUTICS AND SPACE
C     ADMINISTRATION (NASA). THE SOFTWARE IS TECHNOLOGY AND SOFTWARE
C     PUBLICLY AVAILABLE UNDER U.S. EXPORT LAWS AND IS PROVIDED "AS-IS"
C     TO THE RECIPIENT WITHOUT WARRANTY OF ANY KIND, INCLUDING ANY
C     WARRANTIES OF PERFORMANCE OR MERCHANTABILITY OR FITNESS FOR A
C     PARTICULAR USE OR PURPOSE (AS SET FORTH IN UNITED STATES UCC
C     SECTIONS 2312-2313) OR FOR ANY PURPOSE WHATSOEVER, FOR THE
C     SOFTWARE AND RELATED MATERIALS, HOWEVER USED.
C
C     IN NO EVENT SHALL CALTECH, ITS JET PROPULSION LABORATORY, OR NASA
C     BE LIABLE FOR ANY DAMAGES AND/OR COSTS, INCLUDING, BUT NOT
C     LIMITED TO, INCIDENTAL OR CONSEQUENTIAL DAMAGES OF ANY KIND,
C     INCLUDING ECONOMIC DAMAGE OR INJURY TO PROPERTY AND LOST PROFITS,
C     REGARDLESS OF WHETHER CALTECH, JPL, OR NASA BE ADVISED, HAVE
C     REASON TO KNOW, OR, IN FACT, SHALL KNOW OF THE POSSIBILITY.
C
C     RECIPIENT BEARS ALL RISK RELATING TO QUALITY AND PERFORMANCE OF
C     THE SOFTWARE AND ANY RELATED MATERIALS, AND AGREES TO INDEMNIFY
C     CALTECH AND NASA FOR ALL THIRD-PARTY CLAIMS RESULTING FROM THE
C     ACTIONS OF RECIPIENT IN THE USE OF THE SOFTWARE.
C
C$ Input
C
C     The user will be prompted for:
C
C        - The name of a leapseconds Kernel file.
C
C$ Output
C
C     This program will then display on the terminal screen several
C     examples of valid UTC time strings and their corresponding ET
C     (ephemeris time) values.
C
C$ Particulars
C
C     This program demonstrates the use SPICELIB routines 
C     STR2ET and ET2UTC. These routines convert between UTC
C     and ET representations of time:
C
C        UTC    is a character string representation of Universal
C               Time Coordinated.  which may be in calendar, day
C               of year, or Julian date format.  UTC time strings
C               are human-readable and thus suitable as user input.
C
C        ET     which stands for Ephemeris Time, is a double precision
C               number of ephemeris seconds past Julian year 2000,
C               also called Barycentric Dynamical Time.  ET time is
C               used internally in SPICELIB routines for reading
C               ephemeris files.
C
C     For the sake of brevity, this program does NO error checking
C     on its inputs. Mistakes will cause the program to crash. But,
C     since this is an example program, that's OK.
C
C$ References
C
C     Refer to Time Required Reading and the STR2ET and ET2UTC
C     module headers for additional information.
C
C$ Version
C
C-    SPICELIB Version 3.5.0, 10-JUL-2002 (EDW)
C
C        Replaced all load routines (if appropriate) with
C        FURNSH calls. Replaced WRITE(*,*) with CALL TOSTDO
C        (if appropriate). Replaced READ(*,*) with CALL PROMPT.
C
C        Replace UTC2ET calls with STR2ET.      
C     
C-    SPICELIB Version 3.0.1, 03-NOV-2000 (EDW)
C
C        Added a BYEBYE( 'SUCCESS' ) call at program's end.
C
C-    SPICELIB Version 3.0.0, 14-JUL-1997 (WLT)
C
C        The upgrade of the time software broke the old version
C        of tictoc.  This version uses time strings that won't
C        cause errors to be signalled.
C
C-    SPICELIB Version 2.1.0, 05-AUG-1994 (HAN)
C
C        Cleanup up code.
C
C-    SPICELIB Version 2.0.0, 01-APR-1992 (KRG)
C
C        Cleaned up the comments.
C
C        Changed the continuation loop so that it made more sense,
C
C        Changed the value of the PARAMETER FILSIZ from 80 to 128
C        to be consistent with the other 'cookbook' programs.
C
C-    Beta Version 1.2.0, 15-JUL-1991 (HAN)
C
C        The program now accepts either uppercase or lowercase
C        'Y' that indicates whether or not to continue. In the
C        previous version only the uppercase 'Y' caused the program
C        to continue.
C
C-    Beta Version 1.1.0, 20-FEB-1991 (MJS)
C
C        The program name was changed from TIME to TICTOC because
C        of a name conflict with the DOS system command TIME on the
C        IBM PC.
C
C-    Beta Version 1.0.0, 25-SEP-1990 (JEM)
C
C-&
 
C
C     Parameters
C
      INTEGER               NCASES
      PARAMETER           ( NCASES =  6 )
 
      INTEGER               FILSIZ
      PARAMETER           ( FILSIZ = 128 )
 
      INTEGER               STRSIZ
      PARAMETER           ( STRSIZ = 40 )
 
C
C     Variables
C
      CHARACTER*(1)         CONTIN
      CHARACTER*(1)         FORMAT
      CHARACTER*(FILSIZ)    KERNEL
      CHARACTER*(STRSIZ)    UTC     ( NCASES )
      CHARACTER*(STRSIZ)    UTCSTR
      CHARACTER*(FILSIZ)    LINE
      
      DOUBLE PRECISION      ET
 
      INTEGER               I
      INTEGER               PREC
      SAVE
 
C
C     Initial values --- example UTC time strings
C
      DATA                  UTC     / '9 JAN 1986 03:12:59.22451',
     .                                '1/9/86 3:12:59.22451',
     .                                '86-365//12:00',
     .                                'JD 2451545',
     .                                '77 JUL 1',
     .                                '1 JUL ''29' /
 
 
 
C
C     Introduction.
C
      CALL TOSTDO ( ' ' )
      CALL TOSTDO ( ' ' )
      CALL TOSTDO ( '                 Welcome to TICTOC')
      CALL TOSTDO ( ' ' )
      CALL TOSTDO ( 'This program demonstrates the use of '
     .            //'the SPICELIB' )
      CALL TOSTDO ( 'time conversion utility routines: '
     .            //'STR2ET and ET2UTC.')
      CALL TOSTDO ( ' ' )
 
C
C     Get the leapseconds Kernel file name from the user.
C
      CALL TOSTDO ( ' ' )
      CALL PROMPT ( 'Enter the name of a leapseconds kernel file: ',
     .              KERNEL )
      
      CALL TOSTDO ( ' ' )
      CALL TOSTDO ( 'Working ... Please wait.' )
      CALL TOSTDO ( ' ' )
 
C
C     Load the leapseconds kernel file into the kernel pool.
C
      CALL FURNSH ( KERNEL )
 
      I = 1
 
      DO WHILE ( I .LE. NCASES )
 
         CALL TOSTDO ( ' ' )
         CALL TOSTDO ( '      Example UTC time      :  '//UTC(I) )
 
C
C        Convert the UTC string to ET.
C
         CALL STR2ET (  UTC( I ), ET  )
 
         CALL TOSTDO ( ' ')
         LINE = '      Corresponding ET      :  #'
         CALL REPMD  ( LINE, '#', ET, 9, LINE )
         CALL TOSTDO ( LINE )
         CALL TOSTDO ( ' '  )
 
C
C        Convert ET back to UTC and display the three different UTC
C        string formats with 3 digits of precision.
C
         PREC   =  3
         FORMAT = 'C'
         CALL ET2UTC ( ET, FORMAT, PREC, UTCSTR )
         CALL TOSTDO ( '      UTC calendar format   :  ' // UTCSTR )

         FORMAT = 'D'
         CALL ET2UTC ( ET, FORMAT, PREC, UTCSTR )
         CALL TOSTDO ( '      UTC day of year format:  ' // UTCSTR )
 
         FORMAT = 'J'
         CALL ET2UTC ( ET, FORMAT, PREC, UTCSTR )
         CALL TOSTDO ( '      UTC Julian date format:  '// UTCSTR )
 
         I = I + 1
 
         IF ( I .LE. NCASES ) THEN
 
            CALL TOSTDO ( ' ')
            CALL PROMPT ( 'Continue? (Enter Y or N): ', CONTIN )
 
C
C           Check for a lowercase Y, if so, then convert to uppercase.
C
            IF ( CONTIN .EQ. 'y' ) THEN
               CONTIN = 'Y'
            ELSE IF ( CONTIN .EQ. ' ' ) THEN
               CONTIN = 'Y'
            END IF
 
            IF ( CONTIN .NE. 'Y' ) THEN
               I = NCASES + 1
            END IF
 
         END IF
 
      END DO
 
      CALL BYEBYE( 'SUCCESS' )
      END
