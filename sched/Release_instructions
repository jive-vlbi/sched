 NOT DONE

Put in copy of egcentsrcs.dat to the public html site and the
other sched documentation sites.  This is not set up at all yet.



Instructions for making a release of SCHED

==================  Before a release:  ===========================

    Get the latest versions of the Vex and plot code from 
    Antonios and Franco (and maybe Cormac)

    Make sure VERSION and VERNUM in versched.f are up to date.
    Make sure the version on the manual first page are current.

    Make sure sched_work is synced with the svn repository.  This
    should include the results of updating the manual

    Make sure that the leap seconds in $SCHED/src/Sla/dat.f and
    in $PLANET_DATA/naif0007.tls (or equivalent) are up to date.
    If there is a change here, update the slalib.a in my other
    programming areas.

==================  Set environment variables  ====================

    Set the NEWVER in the window where this work is being done so
    that script segments below can be used with a cut-and-paste
    Also check a couple of places below (other machines) where the
    version number is also needed.


setenv NEWVER 8.1
setenv TARDIR /users/cwalker/files/sched_ARCHIVE_nonSVN/TARFILES

==================  Compile  ======================================
    Go to the base directory for the release (trunk or branch)

    Compile and link SCHED for each target architecture.
    Run source ./Verify after each compile to make sure it works.
    Architectures are (with local usable machines):
      LINUX     32 bit Intel linux machine without satellite tracking. (dave)
      LINUX64   64 bit Intel linux machine without satellite tracking. (noatak)
      LINUX64GFORTRAN  Like LINUX64 but compiled with gfortran. (noatak)
      LINUX64SPICE  Like LINUX64 but with satellite tracking (noatak)
      OSXPPC    PowerPC Mac. (horton)
      OSX_INTEL Intel Mac (stikine)
      SUN       Sun Solaris machine  (shire)
            Note some Sun's have too little memory for the default
            parameter settings.

    Go to sched_work/src while logged into a machine of the right type.
      Invoke the appropriate configure file  eg configureLinux
      make clean   (gmake clean on the Sun)
      make         (gmake on the Sun)
      Move the binary to the right subdirectory in bin.
      
=================  Setup files and catalogs  ======================

    Update the setup files from the master:

cd $SCHED/setups
makesetup

    Update updates the stations, freq, and messages files for which
    the masters are in subdirectories.

cd $SCHED/catalogs
Update


**  Update the source and locations catalogs from a geodetic solution.
    there are tools for doing this in 
    /home/noatak/cwalker/code/Calibration/GetCatalogs.
    Careful, with the need to update VLA pad positions, this is a bit
    of a minefield.
    Update the versions in these catalogs.

=================  Examples  ======================================

   Update the examples, run Verify, and clean up the area.
   Check that testruns.out shows a clean comparison after Verify.
   Do this for all architectures.  Occasionally a problem only shows
   up on one.  Use "source ./Verify" to pass the redefined $SCHED if
   this is not the trunk version (sched_work).

cd $SCHED/examples
source ./Verify
Newstd
schclean "*"

=================  Document the release  ===========================

    Write a release note.  This will be mainly a link to the manual
    update section.

    Check the README and README.ftp files in $SCHED.

=================  Manual  =========================================

    Update the examples embedded in the manual.  You can use the 
    following lines as a script.
    inserttex is in $SCHED/RELATED_CODE/INSERTTEX if it is not in path.

cd $SCHED/doc
/bin/rm sched.tex.tmp
mv sched.tex sched.tex.tmp
inserttex 
sched.tex.tmp
sched.tex
 
    Process the manual.  latex will probably need to be run up to
    3 times to get all the links right.
    The local icons switch keeps users from having to go to
    NRAO for the up etc buttons.
    The -link option controls how deep the automatic contents pages
    go at each level.  Without it, the contents on the top level
    page are long enough to frighten off users.

latex sched.tex
latex2html -local_icons -link 2 sched.tex

    Put copies of the examples and catalogs in appropriate subdirectories
    in the directory with the html files to allow simple links.
    Don't worry about setups here for now.
    Give user write privileges to make other maintenance easier.

/bin/rm -r sched/catalogs/*
/bin/rm -r sched/examples/*
tar cf - ../catalogs/sources.vlba  ../catalogs/freq.dat \
         ../catalogs/stations.dat  ../catalogs/locations.dat \
         ../catalogs/peak.cmd      ../catalogs/linefreqs.dat \
         ../examples/*.key         ../examples/*.com     ../examples/*.set \
            | (cd sched; tar xfp -)
chmod  u+w sched/catalogs/*


=================  Test plotting  =================================

    Test the plot functions on egplan.key.  Verify does not make plots.
    Do this at some point on a different machine (like a Sun).
    For 2002Jul02, there was a bug in plotxy and plotuv that 
    only showed up on a Sun.

=================  Make the release version =======================

  I'm no longer convinced making a tagged version is that good an idea.
  If making a tagged version, see instructions at end of this file.

  Make a directory for the new version.

setenv SCHEDNEW ~/files/sched_$NEWVER
mkdir $SCHEDNEW
cd $SCHEDNEW

svn checkout https://svn.aoc.nrao.edu/repos/sched/trunk/sched
mv sched/* .


#  Copy over the examples/Stdout files, the execute modules, and 
#  the html manual, none of which are under svn (they are fast changing
#  and can be derived from files that are in svn.

rsync -auv --exclude ".svn" $SCHED/bin  $SCHEDNEW
rsync -auv --exclude ".svn" $SCHED/examples/Stdout $SCHEDNEW/examples
rsync -auv --exclude ".svn" $SCHED/doc/sched $SCHEDNEW/doc

#  Make the tar file.  Don't include the binaries.
#  First be sure there are not old copies in the archive and ftp areas.
#  Populate the ftp area.

tar --exclude sched --exclude ".svn" --exclude "*.o" --exclude "*~" \
    --exclude "lib" --exclude "core*" \
     -cf ~/files/sched_ARCHIVE_nonSVN/TARFILES/sched_$NEWVER.tar .
gzip ~/files/sched_ARCHIVE_nonSVN/TARFILES/sched_$NEWVER.tar

==================  Put files on the ftp site  =======================

mkdir $FTP/sched/sched_$NEWVER
mkdir $FTP/sched/sched_$NEWVER/binaries
cp ~/files/sched_ARCHIVE_nonSVN/TARFILES/sched_$NEWVER.tar.gz \
     $FTP/sched/sched_$NEWVER/
rsync -auv bin/*  $FTP/sched/sched_$NEWVER/binaries

#  Copy over README.ftp if it has changed.

=================  Test the release  ==============================

    This will not use the spice stuff so it will not be the internal release.
    Clean out sched_temp first if needed.
    Unpack the source distribution into /users/cwalker/sched_temp and
    test the compilation without the satellite stuff
    Use the makefile that does not use the spice package (run configureLinux)
    Check testruns.out at the end.
    This is best done in a sacrificial window so the changed environment
    variables don't haunt you later.

setenv SCHTEST /users/cwalker/files/sched_temp
setenv SCHED $SCHTEST
cd $SCHTEST
chmod u+w $SCHTEST/catalogs/*
/bin/rm -r *
tar -xvf $TARDIR/sched_{$NEWVER}.tar.gz --gunzip
cd src
configureLinux64
make
cd ../examples
Verify


     Kill the window to dump the unwanted $SCHED etc.
     or at least:
setenv SCHED /users/cwalker/files/sched_work

==================  Put the documentation on the web  =============

    Copy documentation to the web server master files on noatak.
    May need to be from the branch if there is one.
    My cron jobs will move them to the main web server or run 
    /users/cwalker/bin/backup_noatak afterwards.
    What is $SCHED/doc/sched should be all that is needed.

    Careful with the big delete (rm) below (that's why the cd ~ first)
    The initial removal of the catalogs etc directories is because the
    cp -r copied too much into those places.
    
    Create the release area, then copy the html documentation without
    the symlinks to the catalogs etc.  Then copy the catalogs etc.
    Some catalog files are write protected.
    The chmod and /bin/rm steps are only needed if getting rid of an
    old attempt.

setenv WEBDIR /home/noatak/cwalker/webnrao
cd ~
mkdir $WEBDIR/sched_$NEWVER
cp -R $SCHEDNEW/doc/sched/* $WEBDIR/sched_$NEWVER/

    When actually doing the release, update the link from generic sched 
    to the version directory.

cd $WEBDIR
/bin/rm sched
ln -s sched_{$NEWVER} sched
cd $SCHED


==================  Announce the release ===========================

Send the email announcement to:
vlbi@nrao.edu,scistaff,analysts,pperley,vlbaops.

Tell the computer people here so they can put the executables in the
system areas (/usr/local/bin)


#  I think that is all.  It's still too much.


==================  SVN branch and other SVN info  ======================
OPTIONAL

If this is the first of a series, it could also be useful to make
a branch for modified versions of that series, separate from the 
new development stuff (I'm souring on this - too much work (Feb 18, 2009).

svn copy https://svn.aoc.nrao.edu/repos/sched/trunk \
         https://svn.aoc.nrao.edu/repos/sched/branch/SCHED-8.0 \
         -m "Tagging the 8.0 release of SCHED"


SVN:  In order to ignore some files in svn status etc.
Note the "." on the end of the second one.  And ignore.txt is needed.
cd examples
svn propset svn:ignore "*" Stdout
svn propset svn:ignore -F ignore.txt .
cd ../doc
svn propset svn:ignore "*" sched


==================  If a tagged version is wanted ===================

I'm no longer convinced I want to do this, so stash the instructions here.

    Make a tagged version.
    To do so from trunk ( There is a slight variation for a branch origen)

svn copy https://svn.aoc.nrao.edu/repos/sched/trunk \
         https://svn.aoc.nrao.edu/repos/sched/tags/sched_$NEWVER \
         -m "Tagging SCHED $NEWVER for maintenance"

setenv SCHEDBASE ~/files/sched_branch8
cd $SCHEDNEW
svn checkout https://svn.aoc.nrao.edu/repos/sched/tags/sched_$NEWVER/ .

#  Copy over the examples/Stdout files and the execute modules.

cd $SCHEDBASE
rsync -auv --exclude ".svn" bin  $SCHEDNEW
rsync -auv --exclude ".svn" examples/Stdout $SCHEDNEW/examples
rsync -auv --exclude ".svn" doc/sched $SCHEDNEW/doc
