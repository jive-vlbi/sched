C      PROGRAM SYN3_C
C
C      Help figure out what the unused synthesizers should be set to.
C      Something is needed in SCHED's setdefs.f (now in setusyn.f)
C
C     Dec 18, 2012 - add effect of the half frequency tones generated by
C     the synthesizers for output frequencies above 8.0 GHz.
C
      INTEGER    NLO
      REAL       FMAX
      PARAMETER  ( NLO = 14*4 )
      PARAMETER  ( FMAX = 60.0 )
      INTEGER    NHI, NHJ, I, J, K, L, HSUM(NLO,NLO), BESTSUM
      REAL       IFF, LO(NLO), LOI, LOJ, BESTL0
      CHARACTER  BAD*3, CODE(NLO,NLO)*1
      LOGICAL    OK, POK
C
C --------------------------------------------------------------------
C
C     Construct the LO array and initialize HSUM
C
      DO I = 1, NLO
         LO(I) = 2.1 + MOD( I - 1 , 2 ) * 0.3 + ( ( I - 1 ) / 2 ) * 0.5
      END DO     
C
C     The range for C band.
      IC1 = 6
      IC2 = 6 + 22
C
C     Identify the cases where there are likely to be signals in the IF
C     from pairs of LO settings.  The IF frequency of the birdy is given
C     for the case when the first LO is actually in use and for when
C     the second is in use.  If one of the frequencies is for an unused
C     synthesizer, there won't be an IF for it.
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Pairs of LOs with potential harmonic RFI problems. ',
     1           'K&L are harmonics'
      WRITE(*,*) '   Severity code is for worst for the pair.'
      WRITE(*,*) '   Severity codes: ',
     1           '~: No problem, A: K+L <=4,  B: K+L<=6,  C: K+L>6 '
      WRITE(*,*)  '    LO1  base  K     LO2  base  L    IFF'//
     1            '    RF low  RF high'//
     2   '  RF2 low  RF2 high  Severity code'
      DO I = 1, NLO
         IF( LO(I) .GE. 8.0 ) THEN
            LOI = LO(I) / 2.0
            NHI = MIN( 10, INT( FMAX / LOI ) )
         ELSE
            LOI = LO(I)
            NHI = 5
         END IF
         DO J = 1, NLO
            CODE(I,J) = '~'
            IF( LO(J) .GE. 8.0 ) THEN
               LOJ = LO(J) / 2.0
               NHJ = MIN( 10, INT( FMAX / LOJ ) )
            ELSE
               LOJ = LO(J)
               NHJ = 5
            END IF
            HSUM(I,J) = 100
            DO K = 1, NHI
               DO L = 1, NHJ
                  IFF = ABS( LOI * K - LOJ * L )
C
C                 Originally this was written to count tones at 
C                 500 or 1000 MHz in the IF.  But I think I can 
C                 allow the 500's as it is outside the band for the
C                 RDBE and on the edge for the legacy system.  The
C                 one at 1000 is in the band for the RDBE which tops
C                 at 1024.

                  IF( IFF .GT. 0.51 .AND. IFF .LT. 1.03 ) THEN
                     IF( HSUM(I,J) .GT. K + L ) HSUM(I,J) = K + L
                     IF( K + L .LE. 4 ) THEN
                        CODE(I,J) = 'A'
                     ELSE IF( CODE(I,J) .NE. 'A' .AND. 
     1                   K + L .LE. 6 ) THEN
                        CODE(I,J) = 'B'
                     ELSE IF( CODE(I,J) .NE. 'B' .AND. 
     1                        CODE(I,J) .NE. 'A' ) THEN
                        CODE(I,J) = 'C'
                     END IF
                     WRITE(*,'( 2F7.2, I3, 2F7.2, I3, F7.0, 4X, '//
     1                     '2F7.0, 4X, 2F7.0, 5X, A1 )' )
     2                  LO(I), LOI, K, LO(J), LOJ, L, IFF*1000.,
     3                  (LO(I)-IFF) * 1000., (LO(I)+IFF) * 1000., 
     4                  (LO(J)-IFF) * 1000., (LO(J)+IFF) * 1000., 
     5                  CODE(I,J)
                  END IF
               END DO
            END DO
         END DO
         WRITE(*,*) ' '
      END DO
C
C     Write a matrix to show what is or is not good for the unused synthesizers.
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Dummy synthesizer settings vs LO'
      WRITE(*,'( 5X, 28F6.1)' )   (LO(J),J=1,NLO,2)
      WRITE(*,'( 8X, 28F6.1)' )   (LO(J),J=1+1,NLO,2)
      DO I = 1, NLO
         WRITE(*,'( F6.1, 2X, 56( 1X, A1, 1X) )' ) 
     1       LO(I), (CODE(J,I),J=1,NLO)
      END DO
C
C     Write a matrix to show what is or is not good for the pairs of LOs.
C     Keep this one in the C band range.
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Pairs of C-band LOs with potential problems. ',
     1           'K&L are harmonics'
      WRITE(*,*) '   ~: No problem, A: K+L <=4,  B: K+L<=6,  C: K+L>6 '
      WRITE(*,*) ' '
      WRITE(*,'( 6X, 12F6.1)' )   (LO(J),J=IC1,IC2,2)
      WRITE(*,'( 9X, 12F6.1)' )   (LO(J),J=IC1+1,IC2,2)
      DO I = IC1, IC2
         WRITE(*,'( F6.1, 2X, 23( 2X, A1) )' ) 
     1       LO(I), (CODE(I,J),J=IC1,IC2)
      END DO
C
C     Write a matrix for 2 LO combinations.
C     Also mark cases where there will be issues between the LOs.
C
C     Add a mark if there are no benign settings for synthesizer 3.
C
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Dummy settings with two active LOs'
      WRITE(*,'( A, 28F8.1)' ) 
     1      '  LO1  LO2 Code Sum LO3?  ', (LO(J),J=NLO,2,-2)
      WRITE(*,'( 30X, 28F8.1)' )   (LO(J),J=NLO-1,1,-2)
      DO J = 1, NLO-1
         DO K = J+1, NLO
            BESTLO = 15.4
            BESTSUM = 0
            BAD = 'xxx'
            DO I = NLO, 1, -1
               IF( HSUM(I,J) + HSUM(I,K) .GT. BESTSUM ) THEN
                  BESTSUM = HSUM(I,J) + HSUM(I,K)
                  BESTLO = LO(I)
               END IF
               IF( CODE(I,J) .EQ. '~' .AND. CODE(I,K) .EQ. '~' ) THEN
                  BAD = '   '
               END IF
            END DO
            WRITE(*,'( 2F5.1, 3X, A1, I5, F5.1, A3, 2X, '//
     1            '56( 2X, 2A1 ) )' ) 
     2             LO(J), LO(K), CODE(J,K), BESTSUM, BESTLO, BAD,
     3             (CODE(I,J),CODE(I,K),I=NLO,1,-1)
         END DO
      END DO
C
C     Look for pairs of LO's that allow all pairs of LOs.
C     There aren't any.
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Possible pairs of LOs'
      DO I = 1, NLO - 1
         DO J = I+1, NLO
            POK = .TRUE.
            DO K = 1, NLO-1
               DO L = K+1, NLO
                  OK = ( CODE(I,K) .EQ. '~' .AND. 
     1                   CODE(I,L) .EQ. '~' ) .OR.
     2                 ( CODE(J,K) .EQ. '~' .AND. 
     3                   CODE(J,L) .EQ. '~' )
                  IF( .NOT. OK ) POK = .FALSE.
               END DO
            END DO
            IF( POK ) WRITE( *, '( 2F6.1 )' ) LO(I), LO(J)                
         END DO
      END DO
C
C     Look for triplets of LOs that work.  There aren't any.
C
      WRITE(*,*) ' '
      WRITE(*,*) 'Possible triples of LOs'
      DO I = 1, NLO - 2
         DO J = I+1, NLO-1
            DO M = J+1, NLO
               POK = .TRUE.
               DO K = 1, NLO-1
                  DO L = K+1, NLO
                     OK = ( CODE(I,K) .EQ. '~' .AND. 
     1                      CODE(I,L) .EQ. '~' ) .OR.
     2                    ( CODE(J,K) .EQ. '~' .AND. 
     3                      CODE(J,K) .EQ. '~' ) .OR. 
     4                    ( CODE(M,K) .EQ. '~' .AND. 
     5                      CODE(M,L) .EQ. '~' )
                     IF( .NOT. OK ) POK = .FALSE.
                  END DO
               END DO
               IF( POK ) WRITE( *, '( 3F6.1 )' ) LO(I), LO(J), LO(M)
            END DO
         END DO
      END DO
C
C     Do a matrix with all possible LO combinations in pairs.



      STOP
      END
